{"version":3,"sources":["components/MovieSearchForm.js","components/pagination/Pagination.js","components/MovieResult.js","components/MovieNominations.js","App.js","index.js"],"names":["Form","state","movieName","isInputCorrect","formChangeHandler","event","setState","target","name","value","formSubmitHandler","preventDefault","props","onSearcMovieName","this","onSubmit","type","onChange","placeholder","serverResponse","Response","Error","Component","Pagination","handlePageClick","e","selectedPage","selected","currentPageHandler","currentPage","pageCount","bind","totalPages","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","MovieResult","number","fetchReqest","clickHandler","movie","movieNominationshandler","disabledButtons","omdbUrl","basicUrl","concat","apikey","fetch","then","res","json","result","toLowerCase","movieList","Search","serverResponseHandler","Math","ceil","totalResults","resultPerPage","error","prevProps","className","map","index","key","style","backgroundImage","Poster","Title","Year","onClick","disabled","includes","imdbID","MovieNominations","movieRemoveNominhandler","isFiveNominants","movieNominants","App","isServerResposeTrue","a","movieNamehandler","length","imdbIDNumber","arrayM","filter","element","item","MovieSearchForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.149d16ac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    movieName: \"\",\r\n    isInputCorrect: false,\r\n  };\r\n\r\n  formChangeHandler = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSearcMovieName(this.state.movieName);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ isInputCorrect: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.formSubmitHandler}>\r\n        <label>Movie Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"movieName\"\r\n          onChange={this.formChangeHandler}\r\n          placeholder=\"Movie name...\"\r\n        />\r\n        <input type=\"submit\" value=\"Search\" />\r\n        {this.props.serverResponse.Response === \"False\" ||\r\n        !this.state.isInputCorrect ? (\r\n          <div>\r\n            <p>OMDB Response: {this.props.serverResponse.Error} Try againe!</p>\r\n          </div>\r\n        ) : null}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"./pagination.css\";\r\n\r\nclass Pagination extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {   \r\n      currentPage: this.props.currentPage,\r\n      pageCount: 0\r\n    };\r\n    this.handlePageClick = this.handlePageClick.bind(this);\r\n  }\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    this.props.currentPageHandler(selectedPage);\r\n  };\r\n\r\n  componentDidMount() {\r\n   this.setState({pageCount:this.props.totalPages})\r\n  }\r\n  render() {\r\n    return (\r\n      <div>        \r\n        <ReactPaginate\r\n          previousLabel={\"prev\"}\r\n          nextLabel={\"next\"}\r\n          breakLabel={\"...\"}\r\n          breakClassName={\"break-me\"}\r\n          pageCount={this.state.pageCount}\r\n          marginPagesDisplayed={1}\r\n          pageRangeDisplayed={3}\r\n          onPageChange={this.handlePageClick}\r\n          containerClassName={\"pagination\"}\r\n          subContainerClassName={\"pages pagination\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\nimport Pagination from \"./pagination/Pagination\";\r\n\r\nclass MovieResult extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movieList: [],\r\n      currentPage: 0,\r\n      totalPages: 0,\r\n      resultPerPage: 10,\r\n      disabledButtons: [],\r\n      apikey: \"7535d36f\",\r\n      basicUrl: \"https://www.omdbapi.com/?apikey=\",\r\n    };\r\n  }\r\n\r\n  currentPageHandler = (number) => {\r\n    this.setState({ currentPage: number }, () => {\r\n      this.fetchReqest();\r\n    });\r\n  };\r\n\r\n  clickHandler = (movie) => {\r\n    this.props.movieNominationshandler(movie);\r\n    this.setState({ disabledButtons: this.props.disabledButtons });\r\n  };\r\n\r\n  omdbUrl = () => {\r\n    return this.state.basicUrl\r\n      .concat(this.state.apikey)\r\n      .concat(\"&type=movie&s=\")\r\n      .concat(this.props.movieName)\r\n      .concat(\"&page=\")\r\n      .concat(this.state.currentPage + 1);\r\n  };\r\n\r\n  fetchReqest = () => {\r\n    fetch(this.omdbUrl(), [])\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          if (result.Response.toLowerCase() === \"true\") {\r\n            this.setState({ movieList: result.Search });\r\n            this.props.serverResponseHandler(result);\r\n            this.setState({\r\n              totalPages: Math.ceil(\r\n                this.props.serverResponse.totalResults /\r\n                  this.state.resultPerPage\r\n              ),\r\n            });\r\n          } else {\r\n            this.setState({ movieList: [] });\r\n            this.setState({ currentPage: 0 });\r\n            this.setState({ totalPages: 0 });\r\n            this.props.serverResponseHandler(result);\r\n          }\r\n        },\r\n        (error) => {\r\n          this.setState({ error });\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount(prevProps) {\r\n    this.fetchReqest();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.movieName !== prevProps.movieName) {\r\n      this.fetchReqest();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"drrr column result\">\r\n        <h2>Results for \"{this.props.movieName}\"</h2>\r\n        <div className=\"result list\">\r\n          <ul>\r\n            {this.state.movieList.map((movie, index) => (\r\n              <li key={index}>\r\n                <div\r\n                  className=\"movie-img\"\r\n                  style={{ backgroundImage: `url(${movie.Poster})` }}\r\n                ></div>\r\n                <p className=\"movie-dscr\">\r\n                  {movie.Title} {movie.Year}\r\n                </p>\r\n                <button\r\n                  onClick={() => {\r\n                    this.clickHandler(movie);\r\n                  }}\r\n                  disabled={this.props.disabledButtons.includes(movie.imdbID)}\r\n                >\r\n                  Nominate\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        {this.state.totalPages !== 0 && (\r\n          <Pagination\r\n            currentPage={this.state.currentPage}\r\n            currentPageHandler={this.currentPageHandler}\r\n            totalPages={this.state.totalPages}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieResult;\r\n","import React, { Component } from \"react\";\r\n\r\nclass MovieNominations extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  clickHandler = (index) => {\r\n    this.props.movieRemoveNominhandler(index);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"column nomination\">\r\n        <h2>Nominations</h2>\r\n        {this.props.isFiveNominants && (\r\n          <div className=\"five nominates\">\r\n            <h3>Thank you for your choice the 5 Nominates!</h3>\r\n          </div>\r\n        )}\r\n        {this.props.movieNominants.map((movie, index) => (\r\n          <li key={index}>\r\n            <div className=\"movie-img\" style={{backgroundImage:`url(${movie.Poster})`}}>\r\n            </div>\r\n            <p className=\"movie-dscr\">\r\n              {movie.Title} ({movie.Year}) Nominate\r\n            </p>\r\n            <button\r\n              onClick={() => {\r\n                this.clickHandler(movie.imdbID);\r\n              }}\r\n            >\r\n              Remove\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieNominations;\r\n","import React, { Component } from \"react\";\r\nimport MovieSearchForm from \"./components/MovieSearchForm\";\r\nimport MovieResult from \"./components/MovieResult\";\r\nimport MovieNominations from \"./components/MovieNominations\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    serverResponse: {\r\n      Response: \"\",\r\n      Error: \"\",\r\n      Search: [],\r\n      totalResults: \"\",\r\n    },\r\n    movieName: null,\r\n    movieNominants: [],\r\n    disabledButtons: [],\r\n    isFiveNominants: false,\r\n    isServerResposeTrue: \"\",\r\n  };\r\n\r\n  omdbUrl = () => {\r\n    return this.state.basicUrl\r\n      .concat(this.state.apikey)\r\n      .concat(\"&type=movie&s=\")\r\n      .concat(this.state.movieName)\r\n      .concat(\"&page=\")\r\n      .concat(this.state.currentPage + 1);\r\n  };\r\n\r\n  serverResponseHandler = async (serverResponse) => {\r\n    await this.setState({ serverResponse });\r\n    await this.setState({\r\n      isServerResposeTrue: this.state.serverResponse.Response,\r\n    });\r\n  \r\n  };\r\n\r\n  movieNamehandler = async (name) => {\r\n    await this.setState({ movieName: name });\r\n  };\r\n\r\n  movieNominationshandler = async (movie) => {\r\n    if (this.state.movieNominants.length <= 4) {\r\n      await this.setState({\r\n        movieNominants: [...this.state.movieNominants, movie],\r\n        disabledButtons: [...this.state.disabledButtons, movie.imdbID],\r\n      });\r\n    } else {\r\n      this.setState({ isFiveNominants: true });\r\n    }\r\n    this.state.movieNominants.length <= 4\r\n      ? this.setState({ isFiveNominants: false })\r\n      : this.setState({ isFiveNominants: true });\r\n  };\r\n\r\n  movieRemoveNominhandler = (imdbIDNumber) => {\r\n    let arrayM = [...this.state.movieNominants];\r\n    if (imdbIDNumber !== -1) {\r\n      arrayM = arrayM.filter((element) => element.imdbID !== imdbIDNumber);\r\n      this.setState({ movieNominants: arrayM });\r\n      this.setState({ isFiveNominants: false });\r\n    }\r\n    this.setState({\r\n      disabledButtons: this.state.disabledButtons.filter((item) => {\r\n        return item !== imdbIDNumber;\r\n      }),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>The Shoppies</h1>\r\n        <MovieSearchForm\r\n          onSearcMovieName={this.movieNamehandler}\r\n          serverResponse={this.state.serverResponse}\r\n        />\r\n        {this.state.movieName || this.state.movieNominants.length ? (\r\n          <div className=\"row result nomination\">\r\n            <MovieResult\r\n              movieName={this.state.movieName}\r\n              serverResponse={this.state.serverResponse}\r\n              serverResponseHandler={this.serverResponseHandler}\r\n              movieNominationshandler={this.movieNominationshandler}\r\n              disabledButtons={this.state.disabledButtons}\r\n            />\r\n            <MovieNominations\r\n              movieNominants={this.state.movieNominants}\r\n              isFiveNominants={this.state.isFiveNominants}\r\n              movieRemoveNominhandler={this.movieRemoveNominhandler}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}